version: '2'

services:

  front-end:
    image: weaveworksdemos/front-end:0.3.12
    hostname: real-front-end
    restart: always
    cap_drop:
      - all
    read_only: true
    depends_on:
      - "agent-front-end"
  agent-front-end:
    build: 
      context: ./microVerumAgent
      args:
        service: front-end
        port: 80
    hostname: front-end
    command: bash -c "./mvnw spring-boot:run ${service} ${port}"
    depends_on:
      - "microverum-db"
      - "microverum-admin-console"
      




  edge-router:
    image: weaveworksdemos/edge-router:0.1.1
    hostname: real-edge-router
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    read_only: true
    tmpfs:
      - /var/run:rw,noexec,nosuid
    restart: always
    depends_on:
      - "agent-edge-router"
  agent-edge-router:
    build: 
      context: ./microVerumAgent
      args:
        service: edge-router
        port: 80
    hostname: edge-router
    ports:
      - '80:80'
      - '8080:8080'
    command: bash -c "./mvnw spring-boot:run ${service} ${port}"
    depends_on:
      - "microverum-db"
      - "microverum-admin-console"




  catalogue:
    image: weaveworksdemos/catalogue:0.3.5
    hostname: real-catalogue
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
  catalogue-db:
    image: weaveworksdemos/catalogue-db:0.3.0
    hostname: catalogue-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_ALLOW_EMPTY_PASSWORD=true
      - MYSQL_DATABASE=socksdb
    depends_on:
      - "agent-catalogue"
  agent-catalogue:
    build: 
      context: ./microVerumAgent
      args:
        service: catalogue
        port: 80
    hostname: catalogue
    command: bash -c "./mvnw spring-boot:run ${service} ${port}"
    depends_on:
      - "microverum-db"
      - "microverum-admin-console"



  carts:
    image: weaveworksdemos/carts:0.4.8
    hostname: real-carts
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
    depends_on:
      - "agent-carts"
  carts-db:
    image: mongo:3.4
    hostname: carts-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
  agent-carts:
    build: 
      context: ./microVerumAgent
      args:
        service: carts
        port: 80
    hostname: carts
    command: bash -c "./mvnw spring-boot:run ${service} ${port}"
    depends_on:
      - "microverum-db"
      - "microverum-admin-console"




  orders:
    image: weaveworksdemos/orders:0.4.7
    hostname: real-orders
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
    depends_on:
      - "agent-orders"
  orders-db:
    image: mongo:3.4
    hostname: orders-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
  agent-orders:
    build: 
      context: ./microVerumAgent
      args:
        service: orders
        port: 80
    hostname: orders
    command: bash -c "./mvnw spring-boot:run ${service} ${port}"
    depends_on:
      - "microverum-db"
      - "microverum-admin-console"




  shipping:
    image: weaveworksdemos/shipping:0.4.8
    hostname: real-shipping
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
    environment:
      - JAVA_OPTS=-Xms64m -Xmx128m -XX:+UseG1GC -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
    depends_on:
      - "agent-shipping"
  agent-shipping:
    build: 
      context: ./microVerumAgent
      args:
        service: shipping
        port: 80
    hostname: shipping
    command: bash -c "./mvnw spring-boot:run ${service} ${port}"
    depends_on:
      - "microverum-db"
      - "microverum-admin-console"


  queue-master:
    image: weaveworksdemos/queue-master:0.3.1
    hostname: queue-master
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid



  rabbitmq:
    image: rabbitmq:3.6.8
    hostname: rabbitmq
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - DAC_OVERRIDE
    read_only: true




  payment:
    image: weaveworksdemos/payment:0.4.3
    hostname: real-payment
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    depends_on:
      - "agent-payment"
  agent-payment:
    build: 
      context: ./microVerumAgent
      args:
        service: payment
        port: 80
    hostname: payment
    command: bash -c "./mvnw spring-boot:run ${service} ${port}"
    depends_on:
      - "microverum-db"
      - "microverum-admin-console"




  user:
    image: weaveworksdemos/user:0.4.4
    hostname: real-user
    restart: always
    cap_drop:
      - all
    cap_add:
      - NET_BIND_SERVICE
    read_only: true
    environment:
      - MONGO_HOST=user-db:27017
    depends_on:
      - "agent-user"
  user-db:
    image: weaveworksdemos/user-db:0.4.0
    hostname: user-db
    restart: always
    cap_drop:
      - all
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: true
    tmpfs:
      - /tmp:rw,noexec,nosuid
  agent-user:
    build: 
      context: ./microVerumAgent
      args:
        service: user
        port: 80
    hostname: user
    command: bash -c "./mvnw spring-boot:run ${service} ${port}"
    depends_on:
      - "microverum-db"
      - "microverum-admin-console"


  user-sim:
    image: weaveworksdemos/load-test:0.1.1
    cap_drop:
      - all
    read_only: true
    hostname: user-simulator
    command: "-d 60 -r 200 -c 2 -h edge-router"


  microverum-db:
    image: mongo:3.4
    hostname: microverum-db
    restart: always


  microverum-admin-console:
    build: 
      context: ./microVerumAdminConsole
    hostname: microverum-admin-console
    depends_on:
      - "microverum-db"